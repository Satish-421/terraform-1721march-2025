- name: This playbook will install nginx, configure nginx web root folder and deploys custom web page
  hosts: all
  tasks:
  - name: Install nginx in Ubuntu ansible node
    when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
    apt: name=nginx state=latest update_cache=yes

  - name: Install Extra Package for Enterprise Linux(EPEL) in Rocky node
    when: ( ansible_distribution == "Rocky" and ansible_os_family == "RedHat" )
    yum: name=epel-release state=latest

  - name: Install nginx in Rocky ansible node
    when: ( ansible_distribution == "Rocky" and ansible_os_family == "RedHat" )
    yum: name=nginx state=latest

  - name: Start the nginx service in Ubuntu ansible node
    when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
    service: name=nginx state=started

  - name: Check if nginx server is already running in Rocky ansible node
    when: ( ansible_distribution == "Rocky" and ansible_os_family == "RedHat" )
    shell: curl localhost:80
    register: output
    ignore_errors: yes

  - name: Start the nginx service in Rocky ansible node
    when: ( ansible_distribution == "Rocky" and output.rc != 0 )
    shell: nginx

  - name: Create the custom web root folder 
    file: path=/var/html mode=0777 state=directory

  - name: Configure nginx web server to serve web pages from our custom folder in Ubuntu ansible node
    when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
    copy: src=default dest=/etc/nginx/sites-available/default

  - name: Configure nginx web server to serve web pages from our custom folder in Rocky ansible node
    when: ( ansible_distribution == "Rocky" and ansible_os_family == "RedHat" )
    copy: src=nginx.conf dest=/etc/nginx/nginx.conf

  - name: Restart the nginx service to apply the config changes in Ubuntu ansible node
    when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
    service: name=nginx state=restarted

  - name: Restart the nginx service in Rocky ansible node
    when: ( ansible_distribution == "Rocky" and ansible_os_family == "RedHat" )
    shell: nginx -s stop && nginx

  - name: Deploy custom web page
    copy: src=index.html dest=/var/html/index.html

- name: Check if we are getting response from ansible node containers
  hosts: localhost
  vars:
  - urls:
    - "http://localhost:8001"
    - "http://localhost:8002"
    - "http://localhost:8003"
    - "http://localhost:8004"
  tasks:
  - name: Access the web page
    shell: "curl {{item}}"
    with_list: "{{urls}}"
    register: output
    ignore_errors: yes

  - debug: var=output

